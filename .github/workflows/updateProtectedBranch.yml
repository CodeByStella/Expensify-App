# This workflow is used to update the staging or production branches
name: Update protected branch

on:
  workflow_call:
    inputs:
      BRANCH:
        type: string
        required: true
        description: The target branch to update

jobs:
  updateProtectedBranch:
    runs-on: ubuntu-latest
    steps:
      - name: Validate target branch
        run: |
          if [[ ${{ inputs.BRANCH }} != 'staging' && ${{ inputs.BRANCH }} != 'production' ]]; then
            echo 'Error: branch input must be either "staging" or "production"'
            exit 1
          fi

      - name: Determine source branch
        id: getSourceBranch
        run: |
          if [[ ${{ inputs.BRANCH }} == 'staging' ]]; then
            echo 'SOURCE_BRANCH=main' >> "$GITHUB_OUTPUT"
          else
            echo 'SOURCE_BRANCH=staging' >> "$GITHUB_OUTPUT"
          fi

      - name: Run turnstyle
        uses: softprops/turnstyle@49108bdfa571e62371bd2c3094893c547ab3fc03
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.getSourceBranch.outputs.SOURCE_BRANCH }}
          token: ${{ secrets.OS_BOTIFY_COMMIT_TOKEN }}
          submodules: true

      - name: Setup git for OSBotify
        id: setupGitForOSBotify
        uses: ./.github/actions/composite/setupGitForOSBotifyApp
        with:
          GPG_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
          OS_BOTIFY_APP_ID: ${{ secrets.OS_BOTIFY_APP_ID }}
          OS_BOTIFY_PRIVATE_KEY: ${{ secrets.OS_BOTIFY_PRIVATE_KEY }}

      - name: Update Mobile-Expensify protected branch
        run: |
          cd Mobile-Expensify

          # Re-create the target branch from the source branch
          git fetch --depth=1 origin ${{ steps.getSourceBranch.outputs.SOURCE_BRANCH }}
          git switch --track origin/${{ steps.getSourceBranch.outputs.SOURCE_BRANCH }}
          git switch -c ${{ inputs.BRANCH }}

          # Force-update the remote production branch
          git push --force origin ${{ inputs.BRANCH }}

      - name: Update E/App protected branch
        run: |
          # Re-create the target branch from the source branch
          git switch -c ${{ inputs.BRANCH }}

          # Update Mobile-Expensify submodule ref
          cd Mobile-Expensify
          git switch ${{ inputs.BRANCH }}
          cd ..
          git add Mobile-Expensify
          git cm -m "Update Mobile-Expensify submodule to latest ${{ inputs.BRANCH }}"

          # Force-update the remote target branch
          git push --force origin ${{ inputs.BRANCH }}

      - name: Announce failed workflow in Slack
        if: ${{ failure() }}
        uses: ./.github/actions/composite/announceFailedWorkflowInSlack
        with:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
